#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <stdbool.h>

#define VOWELS ( \
    1U << ('п' - 'а') | \
    1U << ('ф' - 'а') | \
    1U << ('к' - 'а') | \
    1U << ('т' - 'а') | \
    1U << ('с' - 'а') | \
    1U << ('ш' - 'а') \
)

enum State {
    IN,
    SAVEFIRST,
};

unsigned int char_to_set(int c);
bool similar_consonants();

int main() {

    if (similar_consonants() == 1) {
        printf("Yes");
    } else printf("No");

    return 0;
}

unsigned int char_to_set(int c) {//преобразование буквы в цифру
    c= tolower(c);
    if(c < 'а' || c > 'я') {
        return 0;
    } else {
        return 1u << (c - 'а');
    }
}

bool similar_consonants () {
    enum State state = SAVEFIRST;

    unsigned int set = 0;
    unsigned int set_first_letter = 0;
    int k = 0;

    for (char c = getchar(); c != EOF; c = getchar())
    {

        switch (state)
        {
        case SAVEFIRST:
            set_first_letter = 0 | char_to_set(c);
            if (set_first_letter & VOWELS) {
                set_first_letter = 1;
            }
            set = set | char_to_set(c);
            state = IN;
            break;        
        case IN:
            if (!isalpha(c)) {
                if (!(set & VOWELS) && !(set_first_letter & VOWELS)) {
                    k += 1;
                }
                set_first_letter = 0;
                state = SAVEFIRST;
            }
            if (c == '\n') {
                if (k > 1) {
                return 1;
                } else return 0;
            }
            set = 0;
            set = set | char_to_set(c);
            break;
        }
    }  
    return 0;
}
